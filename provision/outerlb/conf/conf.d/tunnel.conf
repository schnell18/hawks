server {
    listen       80;
    server_name  test.pajk.cn;

    location / {
        client_max_body_size 500k;
        client_body_buffer_size 500k;

        content_by_lua_block {
            local tunnel  = require "hawx.tunnel"
            local rewrite = require "pajk.rewrite"
            tunnel:new {
                upstream            = "login",
                inner_domain        = "pajkdc.com",
                outer_domain        = "pajk.cn",
                content_type        = "text/html;charset=UTF-8",
                with_cors_header    = true,
                default_cors_origin = "http://www.test.pajk.cn",
                body_filters = {
                    tunnel.default_body_filter,
                    rewrite.https_downgrade_rewrite_filter
                }
            }:http_reverse_proxy()
        }
    }
}

server {
    listen               80;
    listen               443 ssl;
    server_name          www.test.pajk.cn;
    ssl_certificate      /data/pki/www.test.pajk.cn-cert.pem;
    ssl_certificate_key  /data/pki/www.test.pajk.cn-key.pem;

    location / {
        client_max_body_size 500k;
        client_body_buffer_size 500k;

        content_by_lua_block {
            local tunnel  = require "hawx.tunnel"
            local rewrite = require "pajk.rewrite"
            tunnel:new {
                upstream     = "innerlb",
                inner_domain = "pajkdc.com",
                outer_domain = "pajk.cn",
                body_filters = {
                    tunnel.default_body_filter,
                    rewrite.tfs_link_rewrite_filter,
                    rewrite.https_downgrade_rewrite_filter,
                    rewrite.im_rewrite_dev_filter
                }
            }:http_reverse_proxy()
        }
    }
}

server {
    listen               80;
    listen               443 ssl;
    server_name          beacon.test.pajk.cn;
    ssl_certificate      /data/pki/www.test.pajk.cn-cert.pem;
    ssl_certificate_key  /data/pki/www.test.pajk.cn-key.pem;

    location / {
        client_max_body_size 500k;
        client_body_buffer_size 500k;

        content_by_lua_block {
            local tunnel  = require "hawx.tunnel"
            local rewrite = require "pajk.rewrite"
            tunnel:new {
                upstream            = "beacon",
                inner_domain        = "pajkdc.com",
                outer_domain        = "pajk.cn",
                body_filters = {
                    tunnel.default_body_filter,
                    rewrite.https_downgrade_rewrite_filter
                }
            }:http_reverse_proxy()
        }
    }
}

server {
    listen               80;
    listen               443 ssl;
    server_name          message.test.pajk.cn;
    ssl_certificate      /data/pki/www.test.pajk.cn-cert.pem;
    ssl_certificate_key  /data/pki/www.test.pajk.cn-key.pem;

    location / {
        client_max_body_size 500k;
        client_body_buffer_size 500k;

        content_by_lua_block {
            local tunnel  = require "hawx.tunnel"
            local rewrite = require "pajk.rewrite"
            tunnel:new {
                upstream            = "message",
                inner_domain        = "pajkdc.com",
                outer_domain        = "pajk.cn",
                with_cors_header    = true,
                default_cors_origin = "http://www.test.pajk.cn",
                body_filters = {
                    tunnel.default_body_filter,
                    rewrite.https_downgrade_rewrite_filter
                }
            }:http_reverse_proxy()
        }
    }
}

server {
    listen               80;
    listen               443 ssl;
    server_name          api.test.pajk.cn;
    ssl_certificate      /data/pki/www.test.pajk.cn-cert.pem;
    ssl_certificate_key  /data/pki/www.test.pajk.cn-key.pem;

    location / {
        rewrite ^/(.*)$ /api/$1 last;
    }

    location ~* ^/api/.*$ {
        client_max_body_size 500k;
        client_body_buffer_size 500k;

        content_by_lua_block {
            local tunnel  = require "hawx.tunnel"
            local rewrite = require "pajk.rewrite"
            tunnel:new {
                upstream            = "api-gateway",
                context_path        = "/api",
                inner_domain        = "pajkdc.com",
                outer_domain        = "pajk.cn",
                with_cors_header    = true,
                default_cors_origin = "http://www.test.pajk.cn",
                body_filters        = {
                    rewrite.api_resp_rewrite_dev_filter,
                    rewrite.https_downgrade_rewrite_filter
                }
            }:http_reverse_proxy()
        }
    }
}

server {
    listen               80;
    listen               443 ssl;
    listen               5291 ssl;
    server_name          im.test.pajk.cn;
    ssl_certificate      /data/pki/www.test.pajk.cn-cert.pem;
    ssl_certificate_key  /data/pki/www.test.pajk.cn-key.pem;
    default_type         "text/plain";

    location / {
        lua_socket_log_errors off;
        content_by_lua_block {
            local tunnel = require "hawx.tunnel"
            tunnel:new {
                upstream     = "tigase",
                protocol     = "ws",
                inner_domain = "pajkdc.com",
                outer_domain = "pajk.cn"
            }:im_reverse_proxy()
        }
    }
}
